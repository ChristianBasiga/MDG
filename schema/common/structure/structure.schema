package mdg_schema.common.structure;

enum StructureType{
    Spawning = 1;
    Trap = 2;
    Claiming = 3;
}

type BuildRequestPayload{
    EntityId builder_id = 1;
    int build_rate = 2;
}

// Really just different responses.
type BuildResponsePayload{
    bool finished_building = 1;
    bool already_built = 2;
    bool no_longer_exists = 3;
}

type JobRequestPayload{
    bytes jobData = 1;
}

type JobResponsePayload{

}

// Literally the same so I could have job type, ie: constructing, progress type, etc.
// Build should be request based progress. I'm retarded. I won't
// leverage resource request though as not tested and while logically same algo now
// fundamentally differeny systems.
type BuildEventPayload{
    int build_progress = 1;
    int estimated_build_completion = 2;
}

type JobRunEventPayload{
    // Actual enums will be in C# side, then cased from enum to this and back accordingly.
    int32 job_type = 1;
    float job_progress = 2;
    float estimated_job_completion = 3;
}

component Structure{
    id = 951;
    bool constructing = 1;
    StructureType structure_type = 3;
    command BuildResponsePayload build(BuildRequestPayload);
    command JobResponsePayload start_job(JobRequestPayload);
    event BuildEventPayload building;
    event JobRunEventPayload job_running;
}